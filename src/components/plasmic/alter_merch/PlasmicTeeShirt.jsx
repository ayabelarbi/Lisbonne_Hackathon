// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: cUjXZ2wVzGNFa4cDmDxyEu
// Component: 0nT3iDQxEs
import * as React from "react";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "../blank_project/plasmic_blank_project.module.css"; // plasmic-import: cUjXZ2wVzGNFa4cDmDxyEu/projectcss
import sty from "./PlasmicTeeShirt.module.css"; // plasmic-import: 0nT3iDQxEs/css
import Rectangle777Icon from "./icons/PlasmicIcon__Rectangle777"; // plasmic-import: p2_rCxr4X/icon
import Rectangle776Icon from "./icons/PlasmicIcon__Rectangle776"; // plasmic-import: SKFpoUgscz/icon
import Vector2Icon from "./icons/PlasmicIcon__Vector2"; // plasmic-import: tE77GgzU8/icon
import Line6Icon from "./icons/PlasmicIcon__Line6"; // plasmic-import: 5MN3PrFIVb/icon
import Line7Icon from "./icons/PlasmicIcon__Line7"; // plasmic-import: J_Xexu3zfu/icon
import Polygon1Icon from "../blank_project/icons/PlasmicIcon__Polygon1"; // plasmic-import: d7dhiU-FB3/icon

export const PlasmicTeeShirt__VariantProps = new Array();

export const PlasmicTeeShirt__ArgProps = new Array();

function PlasmicTeeShirt__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"page1"}
            data-plasmic-override={overrides.page1}
            className={classNames(projectcss.all, sty.page1)}
          >
            <Rectangle777Icon
              className={classNames(projectcss.all, sty.svg__teKeW)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__pREk
              )}
            >
              {"Home > Type > T-SHIRTS"}
            </div>

            <div
              data-plasmic-name={"logo"}
              data-plasmic-override={overrides.logo}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.logo
              )}
            >
              {"LOGO \n"}
            </div>

            <Rectangle776Icon
              className={classNames(projectcss.all, sty.svg___5Z6A)}
              role={"img"}
            />

            <Rectangle776Icon
              className={classNames(projectcss.all, sty.svg__tCnhX)}
              role={"img"}
            />

            <div
              data-plasmic-name={"connectYourWallet"}
              data-plasmic-override={overrides.connectYourWallet}
              className={classNames(projectcss.all, sty.connectYourWallet)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kek72
                )}
              >
                {"Connect your wallet"}
              </div>
            </div>

            <div
              data-plasmic-name={"filterBy"}
              data-plasmic-override={overrides.filterBy}
              className={classNames(projectcss.all, sty.filterBy)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__zwR9L
                )}
              >
                {"Filter by:"}
              </div>
            </div>

            <div
              data-plasmic-name={"black"}
              data-plasmic-override={overrides.black}
              className={classNames(projectcss.all, sty.black)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__sjXl
                )}
              >
                {"Black"}
              </div>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__hyd4W
              )}
            >
              {"White"}
            </div>

            <div
              data-plasmic-name={"purple"}
              data-plasmic-override={overrides.purple}
              className={classNames(projectcss.all, sty.purple)}
            />

            <div
              data-plasmic-name={"binance"}
              data-plasmic-override={overrides.binance}
              className={classNames(projectcss.all, sty.binance)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__gGq3W
                )}
              >
                {"Binance"}
              </div>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__aCbuH
              )}
            >
              {"AAVE"}
            </div>

            <div
              data-plasmic-name={"polygon"}
              data-plasmic-override={overrides.polygon}
              className={classNames(projectcss.all, sty.polygon)}
            />

            <div
              data-plasmic-name={"_05"}
              data-plasmic-override={overrides._05}
              className={classNames(projectcss.all, sty._05)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__oBytC
                )}
              >
                {"0€ - 5€"}
              </div>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__pqbmO
              )}
            >
              {"5€ - 10€"}
            </div>

            <div
              data-plasmic-name={"_1015"}
              data-plasmic-override={overrides._1015}
              className={classNames(projectcss.all, sty._1015)}
            />

            <div
              data-plasmic-name={"color"}
              data-plasmic-override={overrides.color}
              className={classNames(projectcss.all, sty.color)}
            />

            <div
              data-plasmic-name={"sell"}
              data-plasmic-override={overrides.sell}
              className={classNames(projectcss.all, sty.sell)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___97At8
                )}
              >
                {"SELL"}
              </div>
            </div>

            <div
              data-plasmic-name={"rectangle766"}
              data-plasmic-override={overrides.rectangle766}
              className={classNames(projectcss.all, sty.rectangle766)}
            />

            <div
              data-plasmic-name={"rectangle767"}
              data-plasmic-override={overrides.rectangle767}
              className={classNames(projectcss.all, sty.rectangle767)}
            />

            <div
              data-plasmic-name={"rectangle769"}
              data-plasmic-override={overrides.rectangle769}
              className={classNames(projectcss.all, sty.rectangle769)}
            />

            <div
              data-plasmic-name={"rectangle771"}
              data-plasmic-override={overrides.rectangle771}
              className={classNames(projectcss.all, sty.rectangle771)}
            />

            <div
              data-plasmic-name={"rectangle772"}
              data-plasmic-override={overrides.rectangle772}
              className={classNames(projectcss.all, sty.rectangle772)}
            />

            <div
              data-plasmic-name={"rectangle770"}
              data-plasmic-override={overrides.rectangle770}
              className={classNames(projectcss.all, sty.rectangle770)}
            />

            <div
              data-plasmic-name={"rectangle768"}
              data-plasmic-override={overrides.rectangle768}
              className={classNames(projectcss.all, sty.rectangle768)}
            />

            <div
              data-plasmic-name={"_10SmallAave"}
              data-plasmic-override={overrides._10SmallAave}
              className={classNames(projectcss.all, sty._10SmallAave)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__gXnHn
                )}
              >
                {"10€\nSmall\nAAVE"}
              </div>
            </div>

            <div
              data-plasmic-name={"_7XSmallTheGraph"}
              data-plasmic-override={overrides._7XSmallTheGraph}
              className={classNames(projectcss.all, sty._7XSmallTheGraph)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__m93Ri
                )}
              >
                {"7€\nXSmall\nThe Graph"}
              </div>
            </div>

            <div
              data-plasmic-name={"_10SmallPolygon"}
              data-plasmic-override={overrides._10SmallPolygon}
              className={classNames(projectcss.all, sty._10SmallPolygon)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xQHb
                )}
              >
                {"10€\nSmall\nPolygon"}
              </div>
            </div>

            <div
              data-plasmic-name={"frame7"}
              data-plasmic-override={overrides.frame7}
              className={classNames(projectcss.all, sty.frame7)}
            />

            <div
              data-plasmic-name={"_10MediumEthereum"}
              data-plasmic-override={overrides._10MediumEthereum}
              className={classNames(projectcss.all, sty._10MediumEthereum)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bvWSs
                )}
              >
                {"10€\nMedium\nEthereum"}
              </div>
            </div>

            <div
              data-plasmic-name={"_5XLarge1Inch"}
              data-plasmic-override={overrides._5XLarge1Inch}
              className={classNames(projectcss.all, sty._5XLarge1Inch)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__zgsA
                )}
              >
                {"5€\nXLarge\n1inch"}
              </div>
            </div>

            <div
              data-plasmic-name={"_5LargeBinance"}
              data-plasmic-override={overrides._5LargeBinance}
              className={classNames(projectcss.all, sty._5LargeBinance)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__f3AsG
                )}
              >
                {"5€\nLarge\nBinance"}
              </div>
            </div>

            <Vector2Icon
              className={classNames(projectcss.all, sty.svg__bin1N)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___0Vnol
              )}
            >
              {"Search by brand, type ..."}
            </div>

            <Line6Icon
              className={classNames(projectcss.all, sty.svg__wtzLp)}
              role={"img"}
            />

            <Line7Icon
              className={classNames(projectcss.all, sty.svg__uk9O)}
              role={"img"}
            />

            <Line6Icon
              className={classNames(projectcss.all, sty.svg___1Hgpy)}
              role={"img"}
            />

            {true ? (
              <div
                data-plasmic-name={"sizeFilter"}
                data-plasmic-override={overrides.sizeFilter}
                className={classNames(projectcss.all, sty.sizeFilter)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__d6JA
                  )}
                >
                  {"SIZE"}
                </div>

                <Polygon1Icon
                  className={classNames(projectcss.all, sty.svg__g0FXc)}
                  role={"img"}
                />
              </div>
            ) : null}
            {true ? (
              <div
                data-plasmic-name={"color2"}
                data-plasmic-override={overrides.color2}
                className={classNames(projectcss.all, sty.color2)}
              >
                <div
                  data-plasmic-name={"color3"}
                  data-plasmic-override={overrides.color3}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.color3
                  )}
                >
                  {"COLOR"}
                </div>

                <Polygon1Icon
                  className={classNames(projectcss.all, sty.svg___6Cbba)}
                  role={"img"}
                />
              </div>
            ) : null}
            {true ? (
              <div
                data-plasmic-name={"brand2"}
                data-plasmic-override={overrides.brand2}
                className={classNames(projectcss.all, sty.brand2)}
              >
                <div
                  data-plasmic-name={"brand3"}
                  data-plasmic-override={overrides.brand3}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.brand3
                  )}
                >
                  {"BRAND"}
                </div>

                <Polygon1Icon
                  className={classNames(projectcss.all, sty.svg__sxvIb)}
                  role={"img"}
                />
              </div>
            ) : null}
            {true ? (
              <div
                data-plasmic-name={"brand4"}
                data-plasmic-override={overrides.brand4}
                className={classNames(projectcss.all, sty.brand4)}
              >
                <div
                  data-plasmic-name={"brand5"}
                  data-plasmic-override={overrides.brand5}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.brand5
                  )}
                >
                  {"PRICE"}
                </div>

                <Polygon1Icon
                  className={classNames(projectcss.all, sty.svg___7OfgW)}
                  role={"img"}
                />
              </div>
            ) : null}

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__aM8Vm
              )}
            >
              {"Small"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__lmMGv
              )}
            >
              {"Medium"}
            </div>

            <div
              data-plasmic-name={"large2"}
              data-plasmic-override={overrides.large2}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.large2
              )}
            >
              {"Large\n"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__rQoX
              )}
            >
              {"Purple"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__xlQlv
              )}
            >
              {"Polygon"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__hMOfW
              )}
            >
              {"10€ -15€"}
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "page1",
    "logo",
    "connectYourWallet",
    "filterBy",
    "black",
    "purple",
    "binance",
    "polygon",
    "_05",
    "_1015",
    "color",
    "sell",
    "rectangle766",
    "rectangle767",
    "rectangle769",
    "rectangle771",
    "rectangle772",
    "rectangle770",
    "rectangle768",
    "_10SmallAave",
    "_7XSmallTheGraph",
    "_10SmallPolygon",
    "frame7",
    "_10MediumEthereum",
    "_5XLarge1Inch",
    "_5LargeBinance",
    "sizeFilter",
    "color2",
    "color3",
    "brand2",
    "brand3",
    "brand4",
    "brand5",
    "large2"
  ],

  page1: [
    "page1",
    "logo",
    "connectYourWallet",
    "filterBy",
    "black",
    "purple",
    "binance",
    "polygon",
    "_05",
    "_1015",
    "color",
    "sell",
    "rectangle766",
    "rectangle767",
    "rectangle769",
    "rectangle771",
    "rectangle772",
    "rectangle770",
    "rectangle768",
    "_10SmallAave",
    "_7XSmallTheGraph",
    "_10SmallPolygon",
    "frame7",
    "_10MediumEthereum",
    "_5XLarge1Inch",
    "_5LargeBinance",
    "sizeFilter",
    "color2",
    "color3",
    "brand2",
    "brand3",
    "brand4",
    "brand5",
    "large2"
  ],

  logo: ["logo"],
  connectYourWallet: ["connectYourWallet"],
  filterBy: ["filterBy"],
  black: ["black"],
  purple: ["purple"],
  binance: ["binance"],
  polygon: ["polygon"],
  _05: ["_05"],
  _1015: ["_1015"],
  color: ["color"],
  sell: ["sell"],
  rectangle766: ["rectangle766"],
  rectangle767: ["rectangle767"],
  rectangle769: ["rectangle769"],
  rectangle771: ["rectangle771"],
  rectangle772: ["rectangle772"],
  rectangle770: ["rectangle770"],
  rectangle768: ["rectangle768"],
  _10SmallAave: ["_10SmallAave"],
  _7XSmallTheGraph: ["_7XSmallTheGraph"],
  _10SmallPolygon: ["_10SmallPolygon"],
  frame7: ["frame7"],
  _10MediumEthereum: ["_10MediumEthereum"],
  _5XLarge1Inch: ["_5XLarge1Inch"],
  _5LargeBinance: ["_5LargeBinance"],
  sizeFilter: ["sizeFilter"],
  color2: ["color2", "color3"],
  color3: ["color3"],
  brand2: ["brand2", "brand3"],
  brand3: ["brand3"],
  brand4: ["brand4", "brand5"],
  brand5: ["brand5"],
  large2: ["large2"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicTeeShirt__ArgProps,
          internalVariantPropNames: PlasmicTeeShirt__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicTeeShirt__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTeeShirt";
  } else {
    func.displayName = `PlasmicTeeShirt.${nodeName}`;
  }
  return func;
}

export const PlasmicTeeShirt = Object.assign(
  // Top-level PlasmicTeeShirt renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    page1: makeNodeComponent("page1"),
    logo: makeNodeComponent("logo"),
    connectYourWallet: makeNodeComponent("connectYourWallet"),
    filterBy: makeNodeComponent("filterBy"),
    black: makeNodeComponent("black"),
    purple: makeNodeComponent("purple"),
    binance: makeNodeComponent("binance"),
    polygon: makeNodeComponent("polygon"),
    _05: makeNodeComponent("_05"),
    _1015: makeNodeComponent("_1015"),
    color: makeNodeComponent("color"),
    sell: makeNodeComponent("sell"),
    rectangle766: makeNodeComponent("rectangle766"),
    rectangle767: makeNodeComponent("rectangle767"),
    rectangle769: makeNodeComponent("rectangle769"),
    rectangle771: makeNodeComponent("rectangle771"),
    rectangle772: makeNodeComponent("rectangle772"),
    rectangle770: makeNodeComponent("rectangle770"),
    rectangle768: makeNodeComponent("rectangle768"),
    _10SmallAave: makeNodeComponent("_10SmallAave"),
    _7XSmallTheGraph: makeNodeComponent("_7XSmallTheGraph"),
    _10SmallPolygon: makeNodeComponent("_10SmallPolygon"),
    frame7: makeNodeComponent("frame7"),
    _10MediumEthereum: makeNodeComponent("_10MediumEthereum"),
    _5XLarge1Inch: makeNodeComponent("_5XLarge1Inch"),
    _5LargeBinance: makeNodeComponent("_5LargeBinance"),
    sizeFilter: makeNodeComponent("sizeFilter"),
    color2: makeNodeComponent("color2"),
    color3: makeNodeComponent("color3"),
    brand2: makeNodeComponent("brand2"),
    brand3: makeNodeComponent("brand3"),
    brand4: makeNodeComponent("brand4"),
    brand5: makeNodeComponent("brand5"),
    large2: makeNodeComponent("large2"),
    // Metadata about props expected for PlasmicTeeShirt
    internalVariantProps: PlasmicTeeShirt__VariantProps,
    internalArgProps: PlasmicTeeShirt__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicTeeShirt;
/* prettier-ignore-end */
